<?xml version="1.0" encoding="utf-8" ?>
<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
  <alias alias="IFruitsRepository" type="UnityExample.Interfaces.IFruitsRepository, UnityExample.Interfaces"></alias>
  <alias alias="IWorkflowStep" type="UnityExample.Interfaces.IWorkflowStep, UnityExample.Interfaces"></alias>
  <container>
    <register type="IFruitsRepository"
              mapTo ="UnityExample.DAL.CompanyFarmFruitRepository, UnityExample.DAL"
              name="CompanyFarmFruitRepository" />
    <register type="IFruitsRepository"
              mapTo ="UnityExample.DAL.PrivateFarmFruitRepository, UnityExample.DAL"
              name="PrivateFarmFruitRepository" />
    <register type="IFruitsRepository"
              mapTo ="UnityExample.DAL.StorageFruitRepository, UnityExample.DAL"
              name="StorageFruitRepository" />

    <register type="IWorkflowStep"
              mapTo ="UnityExample.Services.CallCarrierStep, UnityExample.Services"
              name="CallCarrierStep"/>

    <register type="IWorkflowStep"
             mapTo ="UnityExample.Services.PackageFruitsStep, UnityExample.Services"
             name="PackageFruitsStep"/>

    <register type="IWorkflowStep"
             mapTo ="UnityExample.Services.SendFruitsStep, UnityExample.Services"
             name="SendFruitsStep"/>

    <register type="IWorkflowStep"
             mapTo ="UnityExample.Services.VerifyFruitCountStep, UnityExample.Services"
             name="VerifyFruitCountStep"/>

    <register type="IWorkflowStep"
             mapTo ="UnityExample.Services.GetFruitsStep, UnityExample.Services"
             name="GetFruitsStep">
      <constructor>
        <param name="fruitsRepository">
          <dependency name="CompanyFarmFruitRepository"></dependency>
        </param>
      </constructor>
    </register>

    <register type="IWorkflowStep"
             mapTo ="UnityExample.Services.UpdateStockStep, UnityExample.Services"
             name="UpdateStockStep">
      <constructor>
        <param name="fruitsRepository">
          <dependency name="CompanyFarmFruitRepository"></dependency>
        </param>
      </constructor>
    </register>

    <register type="UnityExample.Interfaces.IWorkflowManager, UnityExample.Interfaces"
        mapTo ="UnityExample.Services.WorkflowManager, UnityExample.Services"
        name="SimpleWorkflowManager">
      <constructor>
        <param name="steps">
          <array>
            <dependency name="GetFruitsStep"></dependency>
            <dependency name="VerifyFruitCountStep"></dependency>
            <dependency name="PackageFruitsStep"></dependency>
            <dependency name="CallCarrierStep"></dependency>
            <dependency name="SendFruitsStep"></dependency>
            <dependency name="UpdateStockStep"></dependency>
          </array>
        </param>
      </constructor>
    </register>
  </container>
</unity>
